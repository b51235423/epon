[General]
network = test

debug-on-errors = true
print-undisposed = true
record-eventlog = false
repeat = 1
sim-time-limit = 150s
warmup-period = 25s

#debug
#test.err = true
test.olt.debug = -1
test.onu[*].debug = -1

#parameters
test.cPON = 1Gbps
test.cEth = 1Gbps
test.numONUs = 32
test.credit = 0.0
test.tCycle = 2ms
test.tGuard = 1us
#0.5*RTT
test.tProp = 0.1ms
test.r = 0.9
test.multicast = false
test.MPCPSize = 512b
test.bufferSize = 8388608b

#test.downLoad = ${s0=0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95}
test.downEFMax = 560b
test.downEFMin = 560b
test.downAFMax = 12144b
test.downAFMin = 512b
test.downBEMax = 12144b
test.downBEMin = 512b

#test.upLoad = ${u0=0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95 ! s0}
test.upEFMax = 560b
test.upEFMin = 560b
test.upAFMax = 12144b
test.upAFMin = 512b
test.upBEMax = 12144b
test.upBEMin = 512b

[Config TS]
#This config is for basic parameters of TS method, run TS_Scenario1 or below config in simulation. 
test.tProp = ${prop=0.1ms}
#test.tProp = ${prop=0.1ms,0.5ms}
test.cPON = 1Gbps
test.cEth = 1Gbps
test.olt.scheduler.typename = testInterScheduler
test.olt.multiqueue.typename = MultiTwoStageQueue
test.onu[*].scheduler.typename = testIntraScheduler
test.onu[*].queue.typename = TwoStageQueue

#test parameters
#uniform delay constraints
test.tEFDC = 5ms
test.tAFDC = 50ms
test.tBEDC = 100ms
test.tSleep = 20ms
test.onu[*].tEFDC = tEFDC
test.onu[*].tAFDC = tAFDC
test.onu[*].tBEDC = tBEDC
test.remainThreshold = ${rth=2}
#test.remainThreshold = ${rth=2,5}

#adjust
test.rDelta = 0.1
test.rMax = 10.0
test.rMin = 0.1


[Config TS_Scenario1]
extends = TS
test.downLoad = ${s1=0.000013339,0.00002667,0.00006693,0.00013339,0.0002667,0.0006693,0.0013339,0.002667,0.006693,0.013339,0.02667,0.06693,0.13339,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95}
test.upLoad = ${u1=0.000013339,0.00002667,0.00006693,0.00013339,0.0002667,0.0006693,0.0013339,0.002667,0.006693,0.013339,0.02667,0.06693,0.13339,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95 ! s1}

#low power
test.tOverhead = 2.0ms
test.nonUniformSleepPower = true
test.pActive = 6.35W
test.pSleep = 0.7W
test.tSleep = 20ms
#uniform ONU architecture
test.onu[*].pActive = pActive
test.onu[*].pSleep = pSleep
test.onu[*].tOverhead = tOverhead

#poisson
test.service[*].EFSource[*].typename = SRDSource
test.service[*].AFSource[*].typename = SRDSource
test.service[*].BESource[*].typename = SRDSource
test.user[*].EFSource[*].typename = SRDSource
test.user[*].AFSource[*].typename = SRDSource
test.user[*].BESource[*].typename = SRDSource

#EF 5%, BE 95% traffic
test.downEFWeight = 0.05
test.downAFWeight = 0
test.downBEWeight = 0.95
test.upEFWeight = 0.05
test.upAFWeight = 0
test.upBEWeight = 0.95

[Config TS_Scenario2]
extends = TS
test.downLoad = ${s1=0.000013339,0.00002667,0.00006693,0.00013339,0.0002667,0.0006693,0.0013339,0.002667,0.006693,0.013339,0.02667,0.06693,0.13339,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95}
test.upLoad = ${u1=0.000013339,0.00002667,0.00006693,0.00013339,0.0002667,0.0006693,0.0013339,0.002667,0.006693,0.013339,0.02667,0.06693,0.13339,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95 ! s1}

#low power
test.tOverhead = 2.0ms
test.nonUniformSleepPower = true
test.pActive = 6.35W
test.pSleep = 0.7W
test.tSleep = 20ms
#uniform ONU architecture
test.onu[*].pActive = pActive
test.onu[*].pSleep = pSleep
test.onu[*].tOverhead = tOverhead

#poisson
test.service[*].EFSource[*].typename = LRDSource
test.service[*].AFSource[*].typename = LRDSource
test.service[*].BESource[*].typename = LRDSource
test.user[*].EFSource[*].typename = LRDSource
test.user[*].AFSource[*].typename = LRDSource
test.user[*].BESource[*].typename = LRDSource

#EF 5%, BE 95% traffic
test.downEFWeight = 0.05
test.downAFWeight = 0
test.downBEWeight = 0.95
test.upEFWeight = 0.05
test.upAFWeight = 0
test.upBEWeight = 0.95

[Config TS_Scenario3]
extends = TS
#test.cPON = 10Gbps
#test.cEth = 10Gbps
test.downLoad = ${s1=0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95}
test.upLoad = ${u1=0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95 ! s1}

#fast recovery
test.tOverhead = 0.125ms
test.nonUniformSleepPower = false
test.pActive = 3.85W
test.pSleep = 1.08W
#uniform ONU architecture
test.onu[*].pActive = pActive
test.onu[*].pSleep = pSleep
test.onu[*].tOverhead = tOverhead

#poisson
test.service[*].EFSource[*].typename = SRDSource
test.service[*].AFSource[*].typename = SRDSource
test.service[*].BESource[*].typename = SRDSource
test.user[*].EFSource[*].typename = SRDSource
test.user[*].AFSource[*].typename = SRDSource
test.user[*].BESource[*].typename = SRDSource

#EF 20%, AF 40%, BE 40% traffic
test.downEFWeight = 0.2
test.downAFWeight = 0.4
test.downBEWeight = 0.4
test.upEFWeight = 0.2
test.upAFWeight = 0.4
test.upBEWeight = 0.4

[Config TS_Scenario4]
extends = TS
test.downLoad = ${s1=0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95}
test.upLoad = ${u1=0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95 ! s1}

#fast recovery
test.tOverhead = 0.125ms
test.nonUniformSleepPower = false
test.pActive = 3.85W
test.pSleep = 1.08W
#uniform ONU architecture
test.onu[*].pActive = pActive
test.onu[*].pSleep = pSleep
test.onu[*].tOverhead = tOverhead

#poisson
test.service[*].EFSource[*].typename = LRDSource
test.service[*].AFSource[*].typename = LRDSource
test.service[*].BESource[*].typename = LRDSource
test.user[*].EFSource[*].typename = LRDSource
test.user[*].AFSource[*].typename = LRDSource
test.user[*].BESource[*].typename = LRDSource

#EF 20%, AF 40%, BE 40% traffic
test.downEFWeight = 0.2
test.downAFWeight = 0.4
test.downBEWeight = 0.4
test.upEFWeight = 0.2
test.upAFWeight = 0.4
test.upBEWeight = 0.4